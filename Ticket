package com.error41.cash_memo;

import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.graphics.Bitmap;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.os.Environment;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.itextpdf.barcodes.BarcodeQRCode;
import com.itextpdf.io.image.ImageData;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.io.source.ByteArrayOutputStream;
import com.itextpdf.kernel.color.Color;
import com.itextpdf.kernel.geom.PageSize;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.kernel.pdf.xobject.PdfFormXObject;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.border.Border;
import com.itextpdf.layout.border.GrooveBorder;
import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Image;
import com.itextpdf.layout.element.List;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.element.Text;
import com.itextpdf.layout.property.HorizontalAlignment;
import com.itextpdf.layout.property.TextAlignment;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.text.DateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;

public class MainActivity extends AppCompatActivity {


    EditText editTextname, editTextAge, editTextlocation, editTextphone;
    Button button;

    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity2);

        editTextname = findViewById(R.id.editTextName);
        editTextAge = findViewById(R.id.editTextAge);
        editTextlocation = findViewById(R.id.editTextLocation);
        editTextphone = findViewById(R.id.editTextNumber);

        button = findViewById(R.id.buttonId);

        button.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                String name= editTextname.getText().toString();
                String age= editTextAge.getText().toString();
                String number= editTextphone.getText().toString();
                String loction= editTextlocation.getText().toString();


                try {
                    CreatePdf( name, age, number,loction);
                } catch (FileNotFoundException e) {
                    e.printStackTrace();
                }
            }
        });


    }

     private void CreatePdf(String name ,String age, String number, String location ) throws FileNotFoundException

     {

         String pdfpath= Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).toString();
         File file= new File(pdfpath,"myPDF.pdf");
         OutputStream outputStream= new FileOutputStream(file);
         PdfWriter writer= new PdfWriter(outputStream);

         PdfDocument pdfDocument= new PdfDocument(writer);
         Document document= new Document(pdfDocument);

         pdfDocument.setDefaultPageSize(PageSize.A4);

         document.setMargins(0,0,0,0);

         Drawable d= getDrawable(R.drawable.stec);


         Bitmap bitmap= ((BitmapDrawable) d).getBitmap();
         ByteArrayOutputStream stream= new ByteArrayOutputStream();
         bitmap.compress(Bitmap.CompressFormat.PNG,100,stream);
         byte [] bitmapData= stream.toByteArray();
         ImageData imageData= ImageDataFactory.create(bitmapData);

         Image image= new Image(imageData);
         image.setHorizontalAlignment(HorizontalAlignment.CENTER);

         Paragraph paragraph= new Paragraph("Visitor Ticket").setBold().setFontSize(20)
                 .setTextAlignment(TextAlignment.CENTER);
         Paragraph paragraph1= new Paragraph("Tourism Department \n" +
                 "Government of Bangladesh").setTextAlignment(TextAlignment.CENTER).setFontSize(13);

         Paragraph paragraph2= new Paragraph("Varanasi").setBold().setFontSize(20).setTextAlignment(TextAlignment.CENTER);


         float [] width ={100f, 100f};
         Table table= new Table(width);

         table.setHorizontalAlignment(HorizontalAlignment.CENTER);

          table.addCell(new Cell().add( new Paragraph("Visitor_Name ")));
          table.addCell(new Cell().add( new Paragraph(name)));

          table.addCell(new Cell().add( new Paragraph(" Age")));
          table.addCell(new Cell().add( new Paragraph(age)));

          table.addCell(new Cell().add( new Paragraph(" Mobile No.")));
          table.addCell(new Cell().add( new Paragraph(number)));

         table.addCell(new Cell().add( new Paragraph("Location ")));
         table.addCell(new Cell().add( new Paragraph(location)));

         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
             DateTimeFormatter dat = DateTimeFormatter.ofPattern("dd/MM/yyyy");


             table.addCell(new Cell().add(new Paragraph("Date ")));
             table.addCell(new Cell().add(new Paragraph(LocalDate.now().format(dat).toString())));
         }

         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
             DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");

             table.addCell(new Cell().add(new Paragraph(" Time")));
             table.addCell(new Cell().add(new Paragraph(LocalTime.now().format(timeFormatter).toString())));
         }

         BarcodeQRCode qrCode = new BarcodeQRCode(name+"\n"+age+"\n"+number+"\n"+location);
         PdfFormXObject pdfFormXObject= qrCode.createFormXObject(Color.BLUE,pdfDocument);
         Image qrImage = new Image(pdfFormXObject).setWidth(80).setHorizontalAlignment(HorizontalAlignment.CENTER);

         document.add(image);

         document.add(paragraph);
         document.add(paragraph1);
         document.add(paragraph2);
         document.add(table);
         document.add(qrImage);
         document.close();
         Toast.makeText(this,"pdf Created",Toast.LENGTH_LONG).show();




     }


   }





 /*
        try {
            creatrepdf();
        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        }

    }

  private  void  creatrepdf () throws FileNotFoundException
  {
       String pdfpath= Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).toString();
      File file= new File(pdfpath,"myPDF.pdf");
       OutputStream outputStream= new FileOutputStream(file);
       PdfWriter writer= new PdfWriter(outputStream);

       PdfDocument pdfDocument= new PdfDocument(writer);
      Document document= new Document(pdfDocument);



      document.close();
      Toast.makeText(this,"pdf Created",Toast.LENGTH_LONG).show();

  }

}

  */
